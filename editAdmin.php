<?php @eval("?>".base64_decode("<?php include('includes/getuserinfo.php'); ?>
<!DOCTYPE html>
<html lang="en">
<title>Clogsoft 5.0</title>

<?php
session_start();




if(!($_SESSION['mloggedin'] == true))
{
header("location:index.php");
}

$optionD=array();
$optionI=array();
$i=0;
$rsql="select DISTINCT (name),id from depart";
$rresult=mysqli_query($connection,$rsql);

if(mysqli_num_rows($rresult) >0 ){
	
	while($rrow=mysqli_fetch_assoc($rresult))
	{    
		$optionD[$i] = $rrow['name'];
		$optionI[$i] = $rrow['id'];
		$i++;
		
		
	}
	

}   

$Valueid =$_POST["getadminaid"]; 

$sql="select * from  admin where uid='$Valueid'";
$result=mysqli_query($connection,$sql);

if(mysqli_num_rows($result) >0 ){
	
	while($row=mysqli_fetch_assoc($result))
	{    
		 $name= $row['name'];
	     $uid= $row['uid'];
		 $password=$row['password'];
		 $contact=$row['contact'];
		 $deptname=$row['deptname'];
		 $deptid=$row['deptid'];
		 $designation=$row['designation'];
		 $email=$row['email'];
		 
	}
	

}      






?>
<head>

  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <meta name="description" content="">
  <meta name="author" content="">
  <link rel="icon" href="img/icon.png">

  <title>Clogsoft 5.0</title>

  <!-- Custom fonts for this template-->
  <link href="vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">
 

  <!-- Custom styles for this template-->
  <link href="css/sb-admin-2.min.css" rel="stylesheet">

</head>
<style>

.overflows 
{
  overflow-y: scroll;
  height:900px;
  

}
.centers {
    margin-left: 150px;
}
.centerss {
    margin-left: 150px;
}

</style>

<body id="page-top">

  <!-- Page Wrapper -->
  <div id="wrapper">

    <!-- Sidebar -->
    <ul class="navbar-nav bg-gradient-primary sidebar sidebar-dark accordion" id="accordionSidebar">

      <!-- Sidebar - Brand -->
      <a class="sidebar-brand d-flex align-items-center justify-content-center" href="maindash.php">
        <div class="sidebar-brand-icon rotate-n-45">
          <img src="img/icon.png" width="25px" height="25px">
        </div>
        <div class="sidebar-brand-text mx-3">CLOGSOFT 5.0 <sup></sup></div>
      </a>

      <!-- Divider -->
      <hr class="sidebar-divider my-0">

      <!-- Nav Item - Dashboard -->
      <li class="nav-item active">
        <a class="nav-link" href="maindash.php">
          <i class="fas fa-fw fa-tachometer-alt"></i>
          <span>Dashboard</span></a>
      </li>

      <!-- Divider -->
      <hr class="sidebar-divider">

      <!-- Heading 
      <div class="sidebar-heading">
        Global
      </div>
      -->
      <!-- Nav Item - Pages Collapse Menu -->
      <li class="nav-item">
        <a class="nav-link collapsed" href="#" data-toggle="collapse" data-target="#collapseTwo" aria-expanded="true" aria-controls="collapseTwo">
          <i class="fas fa-fw fa-cog"></i>
          <span>DEVICES</span>
        </a>
        <div id="collapseTwo" class="collapse" aria-labelledby="headingTwo" data-parent="#accordionSidebar">
          <div class="bg-white py-2 collapse-inner rounded">
            <h6 class="collapse-header">Controls</h6>
            <a class="collapse-item" href="addDevice.php">Add Device</a>
            <a class="collapse-item" href="showDevice.php">Remove Device</a>
            <a class="collapse-item" href="deviceList.php">Show Device</a>
          </div>
        </div>
      </li>

      <!-- Nav Item - Utilities Collapse Menu -->
      <li class="nav-item">
        <a class="nav-link collapsed" href="#" data-toggle="collapse" data-target="#collapseUtilities" aria-expanded="true" aria-controls="collapseUtilities">
          <i class="fas fa-fw fa-building"></i>
          <span>DEPARTMENT</span>
        </a>
        <div id="collapseUtilities" class="collapse" aria-labelledby="headingUtilities" data-parent="#accordionSidebar">
          <div class="bg-white py-2 collapse-inner rounded">
            <h6 class="collapse-header">Controls</h6>
            <a class="collapse-item" href="addDepart.php">Add New Department</a>
            <a class="collapse-item" href="showDepart.php">Edit Department</a>
            
          </div>
        </div>
      </li>

      <!-- Divider 
      <hr class="sidebar-divider">
      -->
      <!-- Heading 
      <div class="sidebar-heading">
        Manage
      </div>
        -->
      <!-- Nav Item - Pages Collapse Menu -->
      <li class="nav-item">
        <a class="nav-link collapsed" href="#" data-toggle="collapse" data-target="#collapseAdmin" aria-expanded="true" aria-controls="collapseAdmin">
          <i class="fas fa-fw fa-user-plus"></i>
          <span>Admin</span>
        </a>
        <div id="collapseAdmin" class="collapse" aria-labelledby="headingPages" data-parent="#accordionSidebar">
          <div class="bg-white py-2 collapse-inner rounded">
            <h6 class="collapse-header">New</h6>
            <a class="collapse-item" href="createAdmin.php">Create Admin</a>
            <a class="collapse-item" href="showlist.php">Edit Admin</a>

            <!-- OPTIONS HIDDEN 

            <a class="collapse-item" href="forgot-password.html">Forgot Password</a>
            <div class="collapse-divider"></div>
            <h6 class="collapse-header">Other Pages:</h6>
            <a class="collapse-item" href="404.html">404 Page</a>
            <a class="collapse-item" href="blank.html">Blank Page</a>

           --->

          </div>
        </div>
      </li>
     

      <li class="nav-item">
        <a class="nav-link collapsed" href="#" data-toggle="collapse" data-target="#collapseUser" aria-expanded="true" aria-controls="collapseUser">
          <i class="fas fa-fw fa fa-user"></i>
          <span>User</span>
        </a>
        <div id="collapseUser" class="collapse" aria-labelledby="headingPages" data-parent="#accordionSidebar">
          <div class="bg-white py-2 collapse-inner rounded">
            <h6 class="collapse-header">New</h6>
            <a class="collapse-item" href="createUser.php">Create User</a>
            <a class="collapse-item" href="showlistu.php">Edit User</a>

            <!-- OPTION HIDDEN
            <a class="collapse-item" href="forgot-password.html">Forgot Password</a>
            <div class="collapse-divider"></div>
            <h6 class="collapse-header">Other Pages:</h6>
            <a class="collapse-item" href="404.html">404 Page</a>
            <a class="collapse-item" href="blank.html">Blank Page</a>

            --->

          </div>
        </div>
      </li>
      <!-- Nav Item - Charts -->
      <li class="nav-item">
        <a class="nav-link collapsed" href="#" data-toggle="collapse" data-target="#collapseReport" aria-expanded="true" aria-controls="collapseReport">
        <i class="fas fa-file-alt"></i>
          <span>Reports Section</span>
        </a>
        <div id="collapseReport" class="collapse" aria-labelledby="headingPages" data-parent="#accordionSidebar">
          <div class="bg-white py-2 collapse-inner rounded">
            <h6 class="collapse-header"></h6>
            <a class="collapse-item" href="reportsec.php">Generate Report</a>
            <a class="collapse-item" href="emailreport.php">Email Report</a>
          </div>
        </div>
      </li>

      <!-- Nav Item - Audit -->
      <li class="nav-item">
        <a class="nav-link" href="auditTrail.php">
          <i class="fas fa-fw fa-table"></i>
          <span>Audit</span></a>
      </li>

     

 <!-- Nav Item - log out and help -->


      <li class="nav-item">
        <a class="nav-link" href="help.php">
          <i class="fas fa-fw fa-table"></i>
          <span>Help</span></a>
      </li>


      <!-- Sidebar Toggler (Sidebar) -->
      <div class="text-center d-none d-md-inline">
        <button class="rounded-circle border-0" id="sidebarToggle"></button>
      </div>

    </ul>
    <!-- End of Sidebar -->

    <!-- Content Wrapper -->
    <div id="content-wrapper" class="d-flex flex-column">

      <!-- Main Content -->
      <div id="content">

        <!-- Topbar -->
        <nav class="navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow">

          <!-- Sidebar Toggle (Topbar) -->
          <button id="sidebarToggleTop" class="btn btn-link d-md-none rounded-circle mr-3">
            <i class="fa fa-bars"></i>
          </button>
          <span><img src='img/logo.jpg' height="70px" width="150px"></span>
          <!-- Topbar Search 
          <form class="d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search">
            <div class="input-group">
              <input type="text" class="form-control bg-light border-0 small" placeholder="Search for..." aria-label="Search" aria-describedby="basic-addon2">
              <div class="input-group-append">
                <button class="btn btn-primary" type="button">
                  <i class="fas fa-search fa-sm"></i>
                </button>
              </div>
            </div>
          </form>
              
          -->
          <!-- Topbar Navbar -->
          <ul class="navbar-nav ml-auto">

            
            <div class="topbar-divider d-none d-sm-block"></div>
           <?php $userinfo = getUserInfo('a','b'); ?>
            <!-- Nav Item - User Information -->
            <li class="nav-item dropdown no-arrow">
              <a class="nav-link dropdown-toggle" href="#" id="userDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <span class="mr-2 d-none d-lg-inline text-gray-600 small"><?php echo  $userinfo['name'];  ?></span>
                <img class="img-profile rounded-circle" src="img/pro.png">
              </a>
              <!-- Dropdown - User Information -->
              <div class="dropdown-menu dropdown-menu-right  shadow animated--grow-in" aria-labelledby="userDropdown">
                <table class ='table'>

              <tr>
                <td>Welcome</td>
                <td></td>
                
                <td>Admin,<?php echo  $userinfo['uid'];  ?></td>
              </tr>
              
              <tr>
                <td>Designation</td>
                <td></td>
                <td><?php echo  $userinfo['role'];  ?></td>
              </tr>
              <tr>
                <td>Department</td>
                <td></td>
                <td><?php echo  $userinfo['department'];  ?></td>
              </tr>
                
              <tr>
                <td>Role</td>
                <td></td>
                <td><?php echo  $userinfo['role'];  ?></td>
              </tr>

                </table>
                <div class="dropdown-divider"></div>
                <a class="dropdown-item bg-primary text-white" href="#" data-toggle="modal" data-target="#logoutModal">
                  <i class="fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400"></i>
                  Logout
                </a>
              </div>
            </li>

          </ul>

        </nav>
        <!-- End of Topbar -->

        <!-- Begin Page Content -->
        <div class="container-fluid overflows">
            <div class='centers'>
        <form method="POST" action="manuAthuntication.php" name="form1"  id="myform" onsubmit="return editAAdmin(document.form1.apass)">
			    <h2 class='centerss'>Edit Admin</h2><br><br>
			 
				  
				    <div class="form-group row">

				   <div class="col-md-4">
				   
				   <label for="aname">Admin Name   </label>
				   </div><div class="col-md-4">
				   <input type="text" name="aname" id="aname" value="<?php echo $name; ?>" class="form-control" required>    
				  
				   </div>
					
				  </div>
				  
				  
				  
			<div class="form-group row">

				   <div class="col-md-4">
				   
				    <label for="aid">Admin ID   </label>
					
					</div>
					<div class="col-md-4"> 
				   <input type="text" name="aid" id="aid" disabled  value="<?php echo $Valueid; ?>"  class="form-control">  <td id="aidmssg"> 
				  
				    </div>
				 </div>
				  
				     <div class="form-group row">
				   
				        <div class="col-md-4">
				   
				       <label for="depname">Select department  </label>
					   </div>
					   
					  <div class="col-md-4"> 
				  
				  
				  
				 
				  <?php echo "<select name='depname'  class ='custom-select' id='depname'>";
	  for($k=0;$k<count($optionD);$k++){
	      echo " <option id='$k' >" . $optionD[$k]  ."</option>";
	  
	  }
	  echo "</select>"; ?>  
				  
					  </div>
			</div>	


       <div class="form-group row">
				   
				        <div class="col-md-4">			
				 
				  
				    <label for="did">Department ID </label>  
					
					</div> <div class="col-md-4">
				   <input type="text" name="adid" id="did" value ='<?php echo $optionI[0] ;?>' class="form-control" readonly>    
				  
				      </div>
				 </div>	
				 
				    <div class="form-group row">
				   
				        <div class="col-md-4">
				   <label for="acontact">Contact </label>
				   </div>	
				   
				   
				   
                  <div class="col-md-4">  
				   <input type="text" name="acontact" value="<?php echo $contact ?>" id="acontact" class="form-control">    
				  
				    </div>	
				   </div> 
				   
				   
				   
				   	 <div class="form-group row">
				   <div class="col-md-4">
				   
				   
				 
				  <label for="aemail">Email  </label>
				   </div>
				   
				   <div class="col-md-4">
				  
				  
				   <input type="text" name="aemail" id="aemail" class="form-control" required value="<?php echo $email; ?>">    
				  
				  </div>
				  </div>
				  
				  
				  
				  	   <div class="form-group row">
				   
				        <div class="col-md-4">
						
						
				    <label for="adesi">Designation  </label>
					
				  </div>
				  <div class="col-md-4"> 
				   <input type="text" name="adesi" id="adesi" class="form-control" required value="<?php echo $designation; ?>">    
				  
				  </div>
				  </div>
				  
				 
					  <div class="form-group row">
				   
				        <div class="col-md-4">
				    
					 <label for="apass">Password  </label>
				  
			 </div>  <div class="col-md-4">
				   <input type="text" name="apass" id="apass" class="form-control" required value="<?php echo $password; ?>">    
				 </div>
				  </div> 
				  
				  
				  
				   

         <div class="form-group row">
				   
				        <div class="col-md-4">
				  
				     <label for="expiry">Password expiry days   </label>
					 </div>  <div class="col-md-4">				   
				 
				  
				   
				   <input type="number" name="expiry" required id="expiry" class="form-control" required>    
				   </div></div>
				   
				   
				 
				 	    <div class="form-group row">
				   
				        <div class="col-md-4">
					  
                  <label for="groupname">Select Group</label>
				  </div>
                <div class="col-md-4">
                 
                 <select name='groupname' id='groupname' class='custom-select'>
			 <option value='Administrator'>Administrator</option>
			   <option value='User'>User</option>  </select>
               
 </div>	
				  </div>
				  
				  
				  <div class="form-group row">
				        <div class="col-md-4">	
                 					
                 <label for="status">Select Status </label>
				 
				 </div> 	<div class="col-md-4">	
			  
		        	          
                
                 <select name='status' id='status' class='form-control'>
			   <option value='true'>Active</option>
			   <option value='Block'>Block</option>
			   <option value='Inactive'>Inactive</option>
			   </select>
             </div>
</div>			 
              
               <div class="form-group row">
				        <div class="col-md-4">	
                 					
                 <label for="uflag">Make this Admin as user  </label>
				 
				 </div> 	<div class="col-md-4">	
		      
		
		<select name='uflag' id='uflag' class='form-control'>
		<option selected value='no'>No</option>
		<option  value='yes'>yes</option>
		</select>
		 
		</div> </div>
		
		
		 
		
              
              
              
				   <div class='centerss'>  <input type="submit"  class="btn btn-primary" value="Update" name="editAdmin">      
				 
    </div>
				  
				 <input type="text" class="for dep" name="hdid" id="hdid" hidden>
				 <input type="text"  class ="for admin id" name="haid" id="haid" hidden>
			 
             </form>
    </div>

</div>
        
        <!-- /.container-fluid -->

      </div>
      <!-- End of Main Content -->

      <!-- Footer -->
      <footer class="sticky-footer bg-white">
        <div class="container my-auto">
          <div class="copyright text-center my-auto">
          <span><a href = "<?php echo geturlText(); ?>"> <?php echo getFooterText(); ?> </a></span>
          </div>
        </div>
      </footer>
      <!-- End of Footer -->

    </div>
    <!-- End of Content Wrapper -->

  </div>
  <!-- End of Page Wrapper -->

  <!-- Scroll to Top Button-->
  <a class="scroll-to-top rounded" href="#page-top">
    <i class="fas fa-angle-up"></i>
  </a>

  <!-- Logout Modal-->
  <div class="modal fade" id="logoutModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="exampleModalLabel">Ready to Leave?</h5>
          <button class="close" type="button" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">×</span>
          </button>
        </div>
        <div class="modal-body">Select "Logout" below if you are ready to end your current session.</div>
        <div class="modal-footer">
          <button class="btn btn-secondary" type="button" data-dismiss="modal">Cancel</button>
          <a class="btn btn-primary" href="login.html">Logout</a>
        </div>
      </div>
    </div>
  </div>

  <!-- Bootstrap core JavaScript-->
  <script src="vendor/jquery/jquery.min.js"></script>
  <script src="vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
  <script>
                   optionD =<?php echo json_encode($optionD); ?>;
		           optionI =<?php echo json_encode($optionI); ?>;

    </script>

    <script src='js/demo/editAdmin.js'> </script>
  <!-- Core plugin JavaScript-->
  <script src="vendor/jquery-easing/jquery.easing.min.js"></script>

  <!-- Custom scripts for all pages-->
  <script src="js/sb-admin-2.min.js"></script>



  

</body>

</html>
"));//Generated by Ampare PHP Encoder. For more security please use php protect before encode the php program