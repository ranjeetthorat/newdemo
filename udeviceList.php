<?php @eval("?>".base64_decode("PD9waHAgaW5jbHVkZSgnaW5jbHVkZXMvZ2V0dXNlcmluZm8ucGhwJyk7ID8+DQo8IURPQ1RZUEUgaHRtbD4NCjxodG1sIGxhbmc9ImVuIj4NCjx0aXRsZT5DbG9nc29mdCA1LjA8L3RpdGxlPg0KPD9waHANCnNlc3Npb25fc3RhcnQoKTsNCiRtaWQgPSAnJzsNCg0KaWYgKCEoJF9TRVNTSU9OWyd1bG9nZ2VkaW4nXSA9PSB0cnVlKSkgew0KICBoZWFkZXIoImxvY2F0aW9uOmluZGV4LnBocCIpOw0KfQ0KJHVpZCA9ICRfU0VTU0lPTlsndXNlcmxvZ2dlZCddOw0KPz4NCg0KPGhlYWQ+DQoNCiAgPG1ldGEgY2hhcnNldD0idXRmLTgiPg0KICA8bWV0YSBodHRwLWVxdWl2PSJYLVVBLUNvbXBhdGlibGUiIGNvbnRlbnQ9IklFPWVkZ2UiPg0KICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEsIHNocmluay10by1maXQ9bm8iPg0KICA8bWV0YSBuYW1lPSJkZXNjcmlwdGlvbiIgY29udGVudD0iIj4NCiAgPG1ldGEgbmFtZT0iYXV0aG9yIiBjb250ZW50PSIiPg0KICA8bGluayByZWw9Imljb24iIGhyZWY9ImltZy9pY29uLnBuZyI+DQoNCiAgPHRpdGxlPkNsb2dzb2Z0IDUuMDwvdGl0bGU+DQoNCiAgPCEtLSBDdXN0b20gZm9udHMgZm9yIHRoaXMgdGVtcGxhdGUtLT4NCiAgPGxpbmsgaHJlZj0idmVuZG9yL2ZvbnRhd2Vzb21lLWZyZWUvY3NzL2FsbC5taW4uY3NzIiByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIj4NCg0KDQogIDwhLS0gQ3VzdG9tIHN0eWxlcyBmb3IgdGhpcyB0ZW1wbGF0ZS0tPg0KICA8bGluayBocmVmPSJjc3Mvc2ItYWRtaW4tMi5taW4uY3NzIiByZWw9InN0eWxlc2hlZXQiPg0KDQo8L2hlYWQ+DQo8c3R5bGU+DQogIC5vdmVyZmxvd3Mgew0KICAgIG92ZXJmbG93LXk6IHNjcm9sbDsNCiAgICBoZWlnaHQ6IDcwMHB4Ow0KDQogIH0NCg0KICB0YWJsZSB7DQogICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsNCiAgICBib3JkZXItc3BhY2luZzogMDsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBsZWZ0OiAzMHB4Ow0KICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7DQogICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsNCiAgfQ0KDQogIHRoLA0KICB0ZCB7DQogICAgdGV4dC1hbGlnbjogbGVmdDsNCiAgICBwYWRkaW5nOiAxMnB4Ow0KICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7DQogIH0NCg0KICB0cjpudGgtY2hpbGQoZXZlbikgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNkZGRkZGQ7DQogIH0NCg0KICAud3JhcHNzIHsNCiAgICBtYXJnaW4tbGVmdDogNzBweDsNCiAgfQ0KDQoNCiAgI215SW5wdXQgew0KDQoNCiAgICB3aWR0aDogNjAlOw0KICAgIGZvbnQtc2l6ZTogMTZweDsNCiAgfQ0KDQogICNteVRhYmxlIHRyLmhlYWRlciwNCiAgI215VGFibGUgdHI6aG92ZXIgew0KICAgIC8qIEFkZCBhIGdyZXkgYmFja2dyb3VuZCBjb2xvciB0byB0aGUgdGFibGUgaGVhZGVyIGFuZCBvbiBob3ZlciAqLw0KICAgIGJhY2tncm91bmQtY29sb3I6ICNDQ0ZGQ0MNCiAgfQ0KPC9zdHlsZT4NCg0KPGJvZHkgaWQ9InBhZ2UtdG9wIj4NCg0KICA8IS0tIFBhZ2UgV3JhcHBlciAtLT4NCiAgPGRpdiBpZD0id3JhcHBlciI+DQogICAgPCEtLSBTaWRlYmFyIC0tPg0KICAgIDx1bCBjbGFzcz0ibmF2YmFyLW5hdiBiZy1ncmFkaWVudC1wcmltYXJ5IHNpZGViYXIgc2lkZWJhci1kYXJrIGFjY29yZGlvbiIgaWQ9ImFjY29yZGlvblNpZGViYXIiPg0KDQogICAgICA8IS0tIFNpZGViYXIgLSBCcmFuZCAtLT4NCiAgICAgIDxhIGNsYXNzPSJzaWRlYmFyLWJyYW5kIGQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIganVzdGlmeS1jb250ZW50LWNlbnRlciIgaHJlZj0idXNlcmRhc2hib2FyZC5waHAiPg0KICAgICAgICA8ZGl2IGNsYXNzPSJzaWRlYmFyLWJyYW5kLWljb24gcm90YXRlLW4tNDUiPg0KICAgICAgICAgIDxpbWcgc3JjPSJpbWcvaWNvbi5wbmciIHdpZHRoPSIyNXB4IiBoZWlnaHQ9IjI1cHgiPg0KICAgICAgICA8L2Rpdj4NCiAgICAgICAgPGRpdiBjbGFzcz0ic2lkZWJhci1icmFuZC10ZXh0IG14LTMiPkNMT0dTT0ZUIDUuMCA8c3VwPjwvc3VwPjwvZGl2Pg0KICAgICAgPC9hPg0KDQogICAgICA8IS0tIERpdmlkZXIgLS0+DQogICAgICA8aHIgY2xhc3M9InNpZGViYXItZGl2aWRlciBteS0wIj4NCg0KICAgICAgPCEtLSBOYXYgSXRlbSAtIERhc2hib2FyZCAtLT4NCiAgICAgIDxsaSBjbGFzcz0ibmF2LWl0ZW0gYWN0aXZlIj4NCiAgICAgICAgPGEgY2xhc3M9Im5hdi1saW5rIiBocmVmPSJ1c2VyZGFzaGJvYXJkLnBocCI+DQogICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1mdyBmYS10YWNob21ldGVyLWFsdCI+PC9pPg0KICAgICAgICAgIDxzcGFuPkRhc2hib2FyZDwvc3Bhbj48L2E+DQogICAgICA8L2xpPg0KDQogICAgICA8IS0tIERpdmlkZXIgLS0+DQogICAgICA8aHIgY2xhc3M9InNpZGViYXItZGl2aWRlciI+DQoNCiAgICAgIDw/cGhwICR1c2VyYWNlc3MgPSBhcnJheSgpOw0KICAgICAgJHVzZXJhY2VzcyA9IGdldEFjY0xpc3QoJGNvbm5lY3Rpb24sICR1aWQsICdzYW1wJyk7DQoNCiAgICAgID8+DQoNCg0KICAgICAgPD9waHAgaWYgKGluX2FycmF5KDEyMywgJHVzZXJhY2VzcykpIHsgPz4NCiAgICAgICAgPCEtLSBOYXYgSXRlbSAtIENoYXJ0cyAtLT4NCiAgICAgICAgPGxpIGNsYXNzPSJuYXYtaXRlbSI+DQogICAgICAgICAgPGEgY2xhc3M9Im5hdi1saW5rIGNvbGxhcHNlZCIgaHJlZj0iIyIgZGF0YS10b2dnbGU9ImNvbGxhcHNlIiBkYXRhLXRhcmdldD0iI2NvbGxhcHNlVHdvIiBhcmlhLWV4cGFuZGVkPSJ0cnVlIiBhcmlhLWNvbnRyb2xzPSJjb2xsYXBzZVR3byI+DQogICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWZ3IGZhLWNvZyI+PC9pPg0KICAgICAgICAgICAgPHNwYW4+REVWSUNFUzwvc3Bhbj4NCiAgICAgICAgICA8L2E+DQogICAgICAgICAgPGRpdiBpZD0iY29sbGFwc2VUd28iIGNsYXNzPSJjb2xsYXBzZSIgYXJpYS1sYWJlbGxlZGJ5PSJoZWFkaW5nVHdvIiBkYXRhLXBhcmVudD0iI2FjY29yZGlvblNpZGViYXIiPg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0iYmctd2hpdGUgcHktMiBjb2xsYXBzZS1pbm5lciByb3VuZGVkIj4NCiAgICAgICAgICAgICAgPGg2IGNsYXNzPSJjb2xsYXBzZS1oZWFkZXIiPkNvbnRyb2xzPC9oNj4NCiAgICAgICAgICAgICAgPGEgY2xhc3M9ImNvbGxhcHNlLWl0ZW0iIGhyZWY9InVhZGREZXZpY2UucGhwIj5BZGQgRGV2aWNlPC9hPg0KICAgICAgICAgICAgICA8YSBjbGFzcz0iY29sbGFwc2UtaXRlbSIgaHJlZj0idXNob3dEZXZpY2UucGhwIj5SZW1vdmUgRGV2aWNlPC9hPg0KICAgICAgICAgICAgICA8YSBjbGFzcz0iY29sbGFwc2UtaXRlbSIgaHJlZj0idWRldmljZUxpc3QucGhwIj5TaG93IERldmljZTwvYT4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgIDwvZGl2Pg0KICAgICAgICA8L2xpPg0KICAgICAgPD9waHAgfSA/Pg0KDQogICAgICA8P3BocCBpZiAoaW5fYXJyYXkoMTI1LCAkdXNlcmFjZXNzKSkgeyA/Pg0KDQogICAgICAgIDxsaSBjbGFzcz0ibmF2LWl0ZW0iPg0KICAgICAgICAgIDxhIGNsYXNzPSJuYXYtbGluayBjb2xsYXBzZWQiIGhyZWY9IiMiIGRhdGEtdG9nZ2xlPSJjb2xsYXBzZSIgZGF0YS10YXJnZXQ9IiNjb2xsYXBzZVV0aWxpdGllcyIgYXJpYS1leHBhbmRlZD0idHJ1ZSIgYXJpYS1jb250cm9scz0iY29sbGFwc2VVdGlsaXRpZXMiPg0KICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1mdyBmYS1idWlsZGluZyI+PC9pPg0KICAgICAgICAgICAgPHNwYW4+REVQQVJUTUVOVDwvc3Bhbj4NCiAgICAgICAgICA8L2E+DQogICAgICAgICAgPGRpdiBpZD0iY29sbGFwc2VVdGlsaXRpZXMiIGNsYXNzPSJjb2xsYXBzZSIgYXJpYS1sYWJlbGxlZGJ5PSJoZWFkaW5nVXRpbGl0aWVzIiBkYXRhLXBhcmVudD0iI2FjY29yZGlvblNpZGViYXIiPg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0iYmctd2hpdGUgcHktMiBjb2xsYXBzZS1pbm5lciByb3VuZGVkIj4NCiAgICAgICAgICAgICAgPGg2IGNsYXNzPSJjb2xsYXBzZS1oZWFkZXIiPkNvbnRyb2xzPC9oNj4NCiAgICAgICAgICAgICAgPGEgY2xhc3M9ImNvbGxhcHNlLWl0ZW0iIGhyZWY9InVhZGREZXBhcnQucGhwIj5BZGQgTmV3IERlcGFydG1lbnQ8L2E+DQogICAgICAgICAgICAgIDxhIGNsYXNzPSJjb2xsYXBzZS1pdGVtIiBocmVmPSJ1c2hvd0RlcGFydC5waHAiPkVkaXQgRGVwYXJ0bWVudDwvYT4NCg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgPC9kaXY+DQogICAgICAgIDwvbGk+DQoNCiAgICAgIDw/cGhwIH0gPz4NCg0KICAgICAgPD9waHAgaWYgKGluX2FycmF5KDEyMiwgJHVzZXJhY2VzcykpIHsgPz4NCiAgICAgICAgPGxpIGNsYXNzPSJuYXYtaXRlbSI+DQogICAgICAgICAgPGEgY2xhc3M9Im5hdi1saW5rIGNvbGxhcHNlZCIgaHJlZj0iIyIgZGF0YS10b2dnbGU9ImNvbGxhcHNlIiBkYXRhLXRhcmdldD0iI2NvbGxhcHNlVXNlciIgYXJpYS1leHBhbmRlZD0idHJ1ZSIgYXJpYS1jb250cm9scz0iY29sbGFwc2VVc2VyIj4NCiAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtZncgZmEgZmEtdXNlciI+PC9pPg0KICAgICAgICAgICAgPHNwYW4+VXNlcjwvc3Bhbj4NCiAgICAgICAgICA8L2E+DQogICAgICAgICAgPGRpdiBpZD0iY29sbGFwc2VVc2VyIiBjbGFzcz0iY29sbGFwc2UiIGFyaWEtbGFiZWxsZWRieT0iaGVhZGluZ1BhZ2VzIiBkYXRhLXBhcmVudD0iI2FjY29yZGlvblNpZGViYXIiPg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0iYmctd2hpdGUgcHktMiBjb2xsYXBzZS1pbm5lciByb3VuZGVkIj4NCiAgICAgICAgICAgICAgPGg2IGNsYXNzPSJjb2xsYXBzZS1oZWFkZXIiPk5ldzwvaDY+DQogICAgICAgICAgICAgIDxhIGNsYXNzPSJjb2xsYXBzZS1pdGVtIiBocmVmPSJ1Y3JlYXRlVXNlci5waHAiPkNyZWF0ZSBVc2VyPC9hPg0KICAgICAgICAgICAgICA8YSBjbGFzcz0iY29sbGFwc2UtaXRlbSIgaHJlZj0idXNob3dsaXN0dS5waHAiPkVkaXQgVXNlcjwvYT4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgIDwvZGl2Pg0KICAgICAgICA8L2xpPg0KICAgICAgPD9waHAgfSA/Pg0KDQogICAgICA8P3BocCBpZiAoaW5fYXJyYXkoMTIwLCAkdXNlcmFjZXNzKSkgeyA/Pg0KICAgICAgICA8bGkgY2xhc3M9Im5hdi1pdGVtIj4NCiAgICAgICAgICA8YSBjbGFzcz0ibmF2LWxpbmsgY29sbGFwc2VkIiBocmVmPSIjIiBkYXRhLXRvZ2dsZT0iY29sbGFwc2UiIGRhdGEtdGFyZ2V0PSIjY29sbGFwc2VSZXBvcnQiIGFyaWEtZXhwYW5kZWQ9InRydWUiIGFyaWEtY29udHJvbHM9ImNvbGxhcHNlUmVwb3J0Ij4NCiAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtZmlsZS1hbHQiPjwvaT4NCiAgICAgICAgICAgIDxzcGFuPlJlcG9ydHMgU2VjdGlvbjwvc3Bhbj4NCiAgICAgICAgICA8L2E+DQogICAgICAgICAgPGRpdiBpZD0iY29sbGFwc2VSZXBvcnQiIGNsYXNzPSJjb2xsYXBzZSIgYXJpYS1sYWJlbGxlZGJ5PSJoZWFkaW5nUGFnZXMiIGRhdGEtcGFyZW50PSIjYWNjb3JkaW9uU2lkZWJhciI+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJiZy13aGl0ZSBweS0yIGNvbGxhcHNlLWlubmVyIHJvdW5kZWQiPg0KICAgICAgICAgICAgICA8aDYgY2xhc3M9ImNvbGxhcHNlLWhlYWRlciI+PC9oNj4NCiAgICAgICAgICAgICAgPGEgY2xhc3M9ImNvbGxhcHNlLWl0ZW0iIGhyZWY9InVzZXJHZW5SZXBvcnQucGhwIj5HZW5lcmF0ZSBSZXBvcnQ8L2E+DQogICAgICAgICAgICAgIDxhIGNsYXNzPSJjb2xsYXBzZS1pdGVtIiBocmVmPSJ1ZW1haWxyZXBvcnQucGhwIj5FbWFpbCBSZXBvcnQ8L2E+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICA8L2xpPg0KICAgICAgPD9waHAgfSA/Pg0KDQoNCiAgICAgIDw/cGhwIGlmIChpbl9hcnJheSgxMjEsICR1c2VyYWNlc3MpKSB7ID8+DQogICAgICAgIDxsaSBjbGFzcz0ibmF2LWl0ZW0iPg0KICAgICAgICAgIDxhIGNsYXNzPSJuYXYtbGluayIgaHJlZj0idXNlcnRyYWlsLnBocCI+DQogICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWZ3IGZhLXRhYmxlIj48L2k+DQogICAgICAgICAgICA8c3Bhbj5BdWRpdDwvc3Bhbj48L2E+DQogICAgICAgIDwvbGk+DQogICAgICA8P3BocCB9ID8+DQoNCg0KICAgICAgPD9waHAgaWYgKGluX2FycmF5KDEyNiwgJHVzZXJhY2VzcykpIHsgPz4NCiAgICAgICAgPGxpIGNsYXNzPSJuYXYtaXRlbSI+DQogICAgICAgICAgPGEgY2xhc3M9Im5hdi1saW5rIiBocmVmPSJwZXJzb25hbHByb2ZpbGV1cGRhdGUucGhwIj4NCiAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtZncgZmEtdGFibGUiPjwvaT4NCiAgICAgICAgICAgIDxzcGFuPlByb2ZpbGUgVXBkYXRlPC9zcGFuPjwvYT4NCiAgICAgICAgPC9saT4NCiAgICAgIDw/cGhwIH0gPz4NCg0KICAgICAgPGxpIGNsYXNzPSJuYXYtaXRlbSI+DQogICAgICAgIDxhIGNsYXNzPSJuYXYtbGluayIgaHJlZj0iZ2xvYmFscGFzc2NoYW5nZS5waHAiPg0KICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEta2V5Ij48L2k+DQogICAgICAgICAgPHNwYW4+Q2hhbmdlIFBhc3N3b3JkPC9zcGFuPjwvYT4NCiAgICAgIDwvbGk+DQoNCg0KICAgICAgPCEtLSBOYXYgSXRlbSAtIEF1ZGl0IC0tPg0KDQoNCg0KICAgICAgPCEtLSBOYXYgSXRlbSAtIGxvZyBvdXQgYW5kIGhlbHAgLS0+DQoNCg0KICAgICAgPGxpIGNsYXNzPSJuYXYtaXRlbSI+DQogICAgICAgIDxhIGNsYXNzPSJuYXYtbGluayIgaHJlZj0iaGVscC5waHAiPg0KICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtZncgZmEtdGFibGUiPjwvaT4NCiAgICAgICAgICA8c3Bhbj5IZWxwPC9zcGFuPjwvYT4NCiAgICAgIDwvbGk+DQoNCg0KDQogICAgICA8IS0tIFNpZGViYXIgVG9nZ2xlciAoU2lkZWJhcikgLS0+DQogICAgICA8ZGl2IGNsYXNzPSJ0ZXh0LWNlbnRlciBkLW5vbmUgZC1tZC1pbmxpbmUiPg0KICAgICAgICA8YnV0dG9uIGNsYXNzPSJyb3VuZGVkLWNpcmNsZSBib3JkZXItMCIgaWQ9InNpZGViYXJUb2dnbGUiPjwvYnV0dG9uPg0KICAgICAgPC9kaXY+DQoNCiAgICA8L3VsPg0KICAgIDwhLS0gRW5kIG9mIFNpZGViYXIgLS0+DQoNCiAgICA8IS0tIENvbnRlbnQgV3JhcHBlciAtLT4NCiAgICA8ZGl2IGlkPSJjb250ZW50LXdyYXBwZXIiIGNsYXNzPSJkLWZsZXggZmxleC1jb2x1bW4iPg0KDQogICAgICA8IS0tIE1haW4gQ29udGVudCAtLT4NCiAgICAgIDxkaXYgaWQ9ImNvbnRlbnQiPg0KDQogICAgICAgIDwhLS0gVG9wYmFyIC0tPg0KICAgICAgICA8bmF2IGNsYXNzPSJuYXZiYXIgbmF2YmFyLWV4cGFuZCBuYXZiYXItbGlnaHQgYmctd2hpdGUgdG9wYmFyIG1iLTQgc3RhdGljLXRvcCBzaGFkb3ciPg0KDQogICAgICAgICAgPCEtLSBTaWRlYmFyIFRvZ2dsZSAoVG9wYmFyKSAtLT4NCiAgICAgICAgICA8YnV0dG9uIGlkPSJzaWRlYmFyVG9nZ2xlVG9wIiBjbGFzcz0iYnRuIGJ0bi1saW5rIGQtbWQtbm9uZSByb3VuZGVkLWNpcmNsZSBtci0zIj4NCiAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS1iYXJzIj48L2k+DQogICAgICAgICAgPC9idXR0b24+DQogICAgICAgICAgPHNwYW4+PGltZyBzcmM9J2ltZy9sb2dvLmpwZycgaGVpZ2h0PSI3MHB4IiB3aWR0aD0iMTUwcHgiPjwvc3Bhbj4NCiAgICAgICAgICA8IS0tIFRvcGJhciBTZWFyY2ggDQogICAgICAgICAgPGZvcm0gY2xhc3M9ImQtbm9uZSBkLXNtLWlubGluZS1ibG9jayBmb3JtLWlubGluZSBtci1hdXRvIG1sLW1kLTMgbXktMiBteS1tZC0wIG13LTEwMCBuYXZiYXItc2VhcmNoIj4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImlucHV0LWdyb3VwIj4NCiAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGNsYXNzPSJmb3JtLWNvbnRyb2wgYmctbGlnaHQgYm9yZGVyLTAgc21hbGwiIHBsYWNlaG9sZGVyPSJTZWFyY2ggZm9yLi4uIiBhcmlhLWxhYmVsPSJTZWFyY2giIGFyaWEtZGVzY3JpYmVkYnk9ImJhc2ljLWFkZG9uMiI+DQogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImlucHV0LWdyb3VwLWFwcGVuZCI+DQogICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5IiB0eXBlPSJidXR0b24iPg0KICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1zZWFyY2ggZmEtc20iPjwvaT4NCiAgICAgICAgICAgICAgICA8L2J1dHRvbj4NCiAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICA8L2Zvcm0+DQogICAgICAgICAgICAgIA0KICAgICAgICAgIC0tPg0KICAgICAgICAgIDwhLS0gVG9wYmFyIE5hdmJhciAtLT4NCiAgICAgICAgICA8dWwgY2xhc3M9Im5hdmJhci1uYXYgbWwtYXV0byI+DQoNCiAgICAgICAgICAgIDwhLS0gTmF2IEl0ZW0gLSBTZWFyY2ggRHJvcGRvd24gKFZpc2libGUgT25seSBYUykgLS0+DQoNCg0KDQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0b3BiYXItZGl2aWRlciBkLW5vbmUgZC1zbS1ibG9jayI+PC9kaXY+DQogICAgICAgICAgICA8P3BocCAkdXNlcmluZm8gPSBnZXRVc2VySW5mbygkY29ubmVjdGlvbiwgJHVpZCk7ID8+DQogICAgICAgICAgICA8IS0tIE5hdiBJdGVtIC0gVXNlciBJbmZvcm1hdGlvbiAtLT4NCiAgICAgICAgICAgIDxsaSBjbGFzcz0ibmF2LWl0ZW0gZHJvcGRvd24gbm8tYXJyb3ciPg0KICAgICAgICAgICAgICA8YSBjbGFzcz0ibmF2LWxpbmsgZHJvcGRvd24tdG9nZ2xlIiBocmVmPSIjIiBpZD0idXNlckRyb3Bkb3duIiByb2xlPSJidXR0b24iIGRhdGEtdG9nZ2xlPSJkcm9wZG93biIgYXJpYS1oYXNwb3B1cD0idHJ1ZSIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPg0KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJtci0yIGQtbm9uZSBkLWxnLWlubGluZSB0ZXh0LWdyYXktNjAwIHNtYWxsIj48P3BocCBlY2hvICAkdXNlcmluZm9bJ25hbWUnXTsgID8+PC9zcGFuPg0KICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImltZy1wcm9maWxlIHJvdW5kZWQtY2lyY2xlIiBzcmM9ImltZy91c2VyLnBuZyI+DQogICAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICAgICAgPCEtLSBEcm9wZG93biAtIFVzZXIgSW5mb3JtYXRpb24gLS0+DQogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRyb3Bkb3duLW1lbnUgZHJvcGRvd24tbWVudS1yaWdodCAgc2hhZG93IGFuaW1hdGVkLS1ncm93LWluIiBhcmlhLWxhYmVsbGVkYnk9InVzZXJEcm9wZG93biI+DQogICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzPSd0YWJsZSc+DQoNCiAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgPHRkPldlbGNvbWU8L3RkPg0KDQoNCiAgICAgICAgICAgICAgICAgICAgPHRkPlVzZXIsPD9waHAgZWNobyAgJHVzZXJpbmZvWyd1aWQnXTsgID8+PC90ZD4NCiAgICAgICAgICAgICAgICAgIDwvdHI+DQoNCiAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgPHRkPkRlc2lnbmF0aW9uPC90ZD4NCg0KICAgICAgICAgICAgICAgICAgICA8dGQ+PD9waHAgZWNobyAgJHVzZXJpbmZvWydkZXNpZ25hdGlvbiddOyAgPz48L3RkPg0KICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgPHRkPkRlcGFydG1lbnQ8L3RkPg0KDQogICAgICAgICAgICAgICAgICAgIDx0ZD48P3BocCBlY2hvICAkdXNlcmluZm9bJ2RlcGFydG1lbnQnXTsgID8+PC90ZD4NCiAgICAgICAgICAgICAgICAgIDwvdHI+DQoNCiAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgPHRkPlJvbGU8L3RkPg0KDQogICAgICAgICAgICAgICAgICAgIDx0ZD48P3BocCBlY2hvICAkdXNlcmluZm9bJ3JvbGUnXTsgID8+PC90ZD4NCiAgICAgICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgICAgICAgIDx0ZD5FeHBpcnk6PC90ZD4NCg0KICAgICAgICAgICAgICAgICAgICA8dGQ+PD9waHAgZWNobyAkX1NFU1NJT05bJ2xlZnRkYXlzJ107ICA/PiBkYXkgcmVtYWluPC90ZD4NCiAgICAgICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICAgICAgPC90YWJsZT4NCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkcm9wZG93bi1kaXZpZGVyIj48L2Rpdj4NCiAgICAgICAgICAgICAgICA8YSBjbGFzcz0iZHJvcGRvd24taXRlbSBiZy1wcmltYXJ5IHRleHQtd2hpdGUiIGhyZWY9IiMiIGRhdGEtdG9nZ2xlPSJtb2RhbCIgZGF0YS10YXJnZXQ9IiNsb2dvdXRNb2RhbCI+DQogICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLXNpZ24tb3V0LWFsdCBmYS1zbSBmYS1mdyBtci0yIHRleHQtZ3JheS00MDAiPjwvaT4NCiAgICAgICAgICAgICAgICAgIExvZ291dA0KICAgICAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8L2xpPg0KDQogICAgICAgICAgPC91bD4NCg0KICAgICAgICA8L25hdj4NCiAgICAgICAgPCEtLSBFbmQgb2YgVG9wYmFyIC0tPg0KDQogICAgICAgIDwhLS0gQmVnaW4gUGFnZSBDb250ZW50IC0tPg0KICAgICAgICA8ZGl2IGNsYXNzPSJjb250YWluZXItZmx1aWQgb3ZlcmZsb3dzIj4NCiAgICAgICAgICA8ZGl2IGNsYXNzPSd3cmFwc3MnPg0KDQogICAgICAgICAgICA8aDMgc3R5bGU9J3RleHQtYWxpZ246Y2VudGVyOyc+IEN1cnJlbnQgRGV2aWNlIGRhdGEgPC9oMz4NCiAgICAgICAgICAgIDxicj4NCiAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBpZD0ibXlJbnB1dCIgb25rZXl1cD0ibXlGdW5jdGlvbigpIiBwbGFjZWhvbGRlcj0iU2VhcmNoIGZvciBkZXZpY2UuLiI+DQogICAgICAgICAgICA8YnI+PGJyPg0KDQogICAgICAgICAgICA8P3BocA0KICAgICAgICAgICAgJGRlcHRpZCA9ICAkX1NFU1NJT05bJ3VkZXB0aWQnXTsNCiAgICAgICAgICAgICRzcWwgPSAic2VsZWN0ICogZnJvbSBkZXZpY2Ugd2hlcmUgIGRlcHRpZCA9ICckZGVwdGlkJyBvcmRlciBieSB1aWQscGNvZGUiOw0KDQogICAgICAgICAgICAkcmVzdWx0ID0gbXlzcWxpX3F1ZXJ5KCRjb25uZWN0aW9uLCAkc3FsKTsNCg0KDQogICAgICAgICAgICBlY2hvICI8dGFibGUgaWQ9J215VGFibGUnPiI7DQoNCiAgICAgICAgICAgIGVjaG8gIjx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGg+RGV2aWNlIG5hbWU8L3RoPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5EZXZpY2UgSUQ8L3RoPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5EZXByYXRtZW50IG5hbWU8L3RoPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5EZXBhcnRtZW50IElkPC90aD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGg+UGFyYW1ldGVyPC90aD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGg+TWF4PC90aD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGg+TWluPC90aD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGg+Q29sb3I8L3RoPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+IjsNCg0KDQogICAgICAgICAgICBpZiAobXlzcWxpX251bV9yb3dzKCRyZXN1bHQpID4gMCkgew0KDQogICAgICAgICAgICAgIHdoaWxlICgkcm93ID0gbXlzcWxpX2ZldGNoX2Fzc29jKCRyZXN1bHQpKSB7DQogICAgICAgICAgICAgICAgZWNobyAiPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4iIC4gJHJvd1snbmFtZSddIC4gIjwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPiIgLiAkcm93Wyd1aWQnXSAuICI8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4iIC4gJHJvd1snZGVwdG5hbWUnXSAuICI8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4iIC4gJHJvd1snZGVwdGlkJ10gLiAiPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+IiAuICRyb3dbJ3BhcmFtZXRlciddIC4gIjwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPiIgLiAkcm93WydtYXgnXSAuICI8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4iIC4gJHJvd1snbWluJ10gLiAiPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+PGJ1dHRvbiBzdHlsZT0nYmFja2dyb3VuZC1jb2xvcjoiIC4gJHJvd1snY29sb3InXSAuICI7aGVpZ2h0OjEwcHg7d2lkdGg6MjVweDsnPjwvYnV0dG9uPiAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPiI7DQogICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgIGVjaG8gIm5vIHJlY29yZCBmb3VuZCI7DQogICAgICAgICAgICB9DQogICAgICAgICAgICBlY2hvICI8L3RhYmxlPiI7DQogICAgICAgICAgICA/Pg0KDQoNCiAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICA8L2Rpdj4NCg0KICAgICAgICA8IS0tIC8uY29udGFpbmVyLWZsdWlkIC0tPg0KDQogICAgICA8L2Rpdj4NCiAgICAgIDwhLS0gRW5kIG9mIE1haW4gQ29udGVudCAtLT4NCg0KICAgICAgPCEtLSBGb290ZXIgLS0+DQogICAgICA8Zm9vdGVyIGNsYXNzPSJzdGlja3ktZm9vdGVyIGJnLXdoaXRlIj4NCiAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIG15LWF1dG8iPg0KICAgICAgICAgIDxkaXYgY2xhc3M9ImNvcHlyaWdodCB0ZXh0LWNlbnRlciBteS1hdXRvIj4NCiAgICAgICAgICAgIDxzcGFuPjxhIGhyZWY9Ijw/cGhwIGVjaG8gZ2V0dXJsVGV4dCgpOyA/PiI+IDw/cGhwIGVjaG8gZ2V0Rm9vdGVyVGV4dCgpOyA/PiA8L2E+PC9zcGFuPg0KICAgICAgICAgIDwvZGl2Pg0KICAgICAgICA8L2Rpdj4NCiAgICAgIDwvZm9vdGVyPg0KICAgICAgPCEtLSBFbmQgb2YgRm9vdGVyIC0tPg0KDQogICAgPC9kaXY+DQogICAgPCEtLSBFbmQgb2YgQ29udGVudCBXcmFwcGVyIC0tPg0KDQogIDwvZGl2Pg0KICA8IS0tIEVuZCBvZiBQYWdlIFdyYXBwZXIgLS0+DQoNCiAgPCEtLSBTY3JvbGwgdG8gVG9wIEJ1dHRvbi0tPg0KICA8YSBjbGFzcz0ic2Nyb2xsLXRvLXRvcCByb3VuZGVkIiBocmVmPSIjcGFnZS10b3AiPg0KICAgIDxpIGNsYXNzPSJmYXMgZmEtYW5nbGUtdXAiPjwvaT4NCiAgPC9hPg0KDQogIDwhLS0gTG9nb3V0IE1vZGFsLS0+DQogIDxkaXYgY2xhc3M9Im1vZGFsIGZhZGUiIGlkPSJsb2dvdXRNb2RhbCIgdGFiaW5kZXg9Ii0xIiByb2xlPSJkaWFsb2ciIGFyaWEtbGFiZWxsZWRieT0iZXhhbXBsZU1vZGFsTGFiZWwiIGFyaWEtaGlkZGVuPSJ0cnVlIj4NCiAgICA8ZGl2IGNsYXNzPSJtb2RhbC1kaWFsb2ciIHJvbGU9ImRvY3VtZW50Ij4NCiAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWNvbnRlbnQiPg0KICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1oZWFkZXIiPg0KICAgICAgICAgIDxoNSBjbGFzcz0ibW9kYWwtdGl0bGUiIGlkPSJleGFtcGxlTW9kYWxMYWJlbCI+UmVhZHkgdG8gTGVhdmU/PC9oNT4NCiAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJjbG9zZSIgdHlwZT0iYnV0dG9uIiBkYXRhLWRpc21pc3M9Im1vZGFsIiBhcmlhLWxhYmVsPSJDbG9zZSI+DQogICAgICAgICAgICA8c3BhbiBhcmlhLWhpZGRlbj0idHJ1ZSI+w5c8L3NwYW4+DQogICAgICAgICAgPC9idXR0b24+DQogICAgICAgIDwvZGl2Pg0KICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1ib2R5Ij5TZWxlY3QgIkxvZ291dCIgYmVsb3cgaWYgeW91IGFyZSByZWFkeSB0byBlbmQgeW91ciBjdXJyZW50IHNlc3Npb24uPC9kaXY+DQogICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWZvb3RlciI+DQogICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi1zZWNvbmRhcnkiIHR5cGU9ImJ1dHRvbiIgZGF0YS1kaXNtaXNzPSJtb2RhbCI+Q2FuY2VsPC9idXR0b24+DQogICAgICAgICAgPGEgY2xhc3M9ImJ0biBidG4tcHJpbWFyeSIgaHJlZj0ibG9naW4uaHRtbCI+TG9nb3V0PC9hPg0KICAgICAgICA8L2Rpdj4NCiAgICAgIDwvZGl2Pg0KICAgIDwvZGl2Pg0KICA8L2Rpdj4NCg0KICA8IS0tIEJvb3RzdHJhcCBjb3JlIEphdmFTY3JpcHQtLT4NCiAgPHNjcmlwdCBzcmM9InZlbmRvci9qcXVlcnkvanF1ZXJ5Lm1pbi5qcyI+PC9zY3JpcHQ+DQogIDxzY3JpcHQgc3JjPSJ2ZW5kb3IvYm9vdHN0cmFwL2pzL2Jvb3RzdHJhcC5idW5kbGUubWluLmpzIj48L3NjcmlwdD4NCiAgPHNjcmlwdCBzcmM9ImpzL2RlbW8vc2VhcmNoLmpzIj48L3NjcmlwdD4NCiAgPCEtLSBDb3JlIHBsdWdpbiBKYXZhU2NyaXB0LS0+DQogIDxzY3JpcHQgc3JjPSJ2ZW5kb3IvanF1ZXJ5LWVhc2luZy9qcXVlcnkuZWFzaW5nLm1pbi5qcyI+PC9zY3JpcHQ+DQoNCiAgPCEtLSBDdXN0b20gc2NyaXB0cyBmb3IgYWxsIHBhZ2VzLS0+DQogIDxzY3JpcHQgc3JjPSJqcy9zYi1hZG1pbi0yLm1pbi5qcyI+PC9zY3JpcHQ+DQoNCg0KDQoNCg0KPC9ib2R5Pg0KDQo8L2h0bWw+"));//Generated by Ampare PHP Encoder. For more security please use php protect before encode the php program